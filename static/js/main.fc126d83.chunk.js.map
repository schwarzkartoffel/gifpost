{"version":3,"sources":["components/PostCardComponent.js","components/GifSelectComponent.js","components/PostFormComponent.js","components/PostComponent.js","components/CommentListComponent.js","components/CommentBoxComponent.js","components/MainComponent.js","App.js","index.js"],"names":["PostCard","props","className","postText","postGif","src","images","original","url","alt","title","GifSelect","listOfGifs","gifResponse","data","map","elem","fixed_width_downsampled","onClick","posted","setCommentBoxGifUrl","setPostGif","id","type","value","gifSearchText","onChange","e","onChangeGifSelectText","PostForm","setPostText","target","placeholder","setPostPosted","Post","CommentList","commentList","length","comments","comment","index","text","commentGifUrl","CommentBox","postPosted","commentBoxText","setCommentBoxText","commentBoxGifUrl","addComment","Main","useState","undefined","setGifSearchText","setGifResponse","setCommentList","useEffect","GIPHY_API_KEY","process","fetch","then","response","json","resp","fetchGifs","b","gifObj","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc126d83.chunk.js","sourcesContent":["export const PostCard = (props) => {\r\n    return (\r\n        <div className=\"card mt-3\">\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text post-text\">\r\n                    {props.postText}\r\n                </p>\r\n            </div>\r\n            {props.postGif?\r\n                <div className=\"card-img-bottom\">\r\n                    <img src={props.postGif.images.original.url} alt={props.postGif.title}/>\r\n                </div>\r\n            :\r\n                <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}","export const GifSelect = (props) => {\r\n    const listOfGifs =\r\n        props.gifResponse? props.gifResponse.data ?\r\n            (props.gifResponse.data.map((elem) => {\r\n                return (\r\n                    <div className=\"col-12\" key={elem.id}>\r\n                        {/* <video alt={elem.title} autoPlay loop>\r\n                            <source src={elem.images.fixed_width_small.mp4}\r\n                            type=\"video/mp4\"\r\n                            />\r\n                        </video> */\r\n                        <img src={elem.images.fixed_width_downsampled.url}\r\n                        alt={elem.title}\r\n                        onClick={() => {\r\n                            if(!props.posted) {\r\n                                props.setPostGif(elem)\r\n                            }\r\n                            else {\r\n                                props.setCommentBoxGifUrl(elem.images.fixed_width_downsampled.url)\r\n                            }\r\n                        }}\r\n                        />}\r\n                    </div>\r\n                )\r\n            })) : [] : [];\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <input type=\"text\" className=\"form-control mb-3\" value={props.gifSearchText}\r\n                        onChange={(e) => props.onChangeGifSelectText(e)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {listOfGifs}\r\n            </div>\r\n        </>\r\n    );\r\n}","import { GifSelect } from \"./GifSelectComponent\";\r\n\r\nexport const PostForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <textarea onChange={(e) => {props.setPostText(e.target.value)}}\r\n                    value={props.postText} placeholder=\"What's on your mind?\"\r\n                    className=\"form-control mb-3 mt-3\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {props.postGif?\r\n                        <img src={props.postGif.images.original.url}\r\n                        alt={props.postGif.title}\r\n                        />\r\n                    :\r\n                        <div></div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col align-self-start\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\"\r\n                    onClick={() => {\r\n                        props.setPostPosted(true);\r\n                    }}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                <div className=\"col align-self-end\">\r\n                    <div className=\"dropdown\">\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-success dropdown-toggle align-self-end\"\r\n                            id=\"gif-dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"\r\n                        >\r\n                            GIF\r\n                        </button>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"gif-dropdown\">\r\n                            <GifSelect gifSearchText={props.gifSearchText}\r\n                            onChangeGifSelectText={props.onChangeGifSelectText}\r\n                            gifResponse={props.gifResponse}\r\n                            setPostGif={props.setPostGif}\r\n                            posted={props.posted}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import { PostCard } from \"./PostCardComponent\";\r\nimport { PostForm } from \"./PostFormComponent\";\r\n\r\nexport const Post = (props) => {\r\n    /* incoming props: posted - whether the post has been posted yet\r\n\r\n    */\r\n    /*\r\n        post = {\r\n            postText: \"\",\r\n            postGif: <gif>,\r\n            comments: [\r\n                {commentText: \"\",\r\n                commentGif: <gif>},\r\n                ...\r\n            ]\r\n        }\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            {!props.posted ?\r\n                <PostForm posted={props.posted}\r\n                setPostPosted={props.setPostPosted}\r\n                postText={props.postText}\r\n                postGif={props.postGif}\r\n                setPostGif={props.setPostGif}\r\n                setPostText={props.setPostText}\r\n                gifSearchText={props.gifSearchText}\r\n                onChangeGifSelectText={props.onChangeGifSelectText}\r\n                gifResponse={props.gifResponse}\r\n                />\r\n                :\r\n                <PostCard postText={props.postText} postGif={props.postGif}/>\r\n            }\r\n        </div>\r\n    );\r\n}","export const CommentList = (props) => {\r\n    if (props.commentList.length === 0) {\r\n        return <div></div>\r\n    }\r\n\r\n    const comments = props.commentList.map((comment, index) => {\r\n        return (\r\n            <div className=\"row\" key={index}>\r\n                <div className=\"col-12\">\r\n                    <div className=\"card mt-3 mb-3 comment-card\">\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">\r\n                                {comment.text}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"card-img-bottom\">\r\n                        {comment.commentGifUrl?\r\n                            <img src={comment.commentGifUrl} alt={comment.text} />\r\n                            :\r\n                            <div></div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return <div>{comments}</div>\r\n}","import { GifSelect } from \"./GifSelectComponent\"\r\n\r\nexport const CommentBox = (props) => {\r\n    if (!props.postPosted) {\r\n        return <div></div>\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"row mt-3 mb-3\">\r\n            <div className=\"col-12\">\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10\">\r\n                            <input className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Write Comment...\"\r\n                                value={props.commentBoxText}\r\n                                onChange={(e) => { props.setCommentBoxText(e.target.value) }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <button type=\"button\" className=\"btn btn-warning\"\r\n                                onClick={() => {\r\n                                    const comment = {\r\n                                        text: props.commentBoxText,\r\n                                        commentGifUrl: props.commentBoxGifUrl\r\n                                    }\r\n                                    props.addComment(comment);\r\n                                }}>\r\n                                Comment\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <div className=\"col align-self-end\">\r\n                                <div className=\"dropdown\">\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-success dropdown-toggle align-self-end\"\r\n                                        id=\"gif-dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"\r\n                                    >\r\n                                        GIF\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"gif-dropdown\">\r\n                                        <GifSelect\r\n                                            gifSearchText={props.gifSearchText}\r\n                                            onChangeGifSelectText={props.onChangeGifSelectText}\r\n                                            gifResponse={props.gifResponse}\r\n                                            posted={props.postPosted}\r\n                                            setCommentBoxGifUrl={props.setCommentBoxGifUrl}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {props.commentBoxGifUrl ?\r\n                                    <img src={props.commentBoxGifUrl} alt=\"commentGif\"\r\n                                        onClick={() => { props.setCommentBoxGifUrl(props.commentBoxGifUrl) }} />\r\n                                    :\r\n                                    <div></div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Post } from './PostComponent';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommentList } from './CommentListComponent';\r\nimport { CommentBox } from './CommentBoxComponent';\r\n\r\nexport const Main = (props) => {\r\n    \r\n        const [postPosted, setPostPosted] = useState(false);\r\n        const [postText, setPostText] =  useState(\"\");\r\n        const [postGif, setPostGif] = useState(undefined);\r\n        const [gifSearchText, setGifSearchText] = useState(\"\");\r\n        const [gifResponse, setGifResponse] = useState({});\r\n        const [commentList, setCommentList] = useState([]);\r\n        const [commentBoxText, setCommentBoxText] = useState(\"\");\r\n        const [commentBoxGifUrl, setCommentBoxGifUrl] = useState(\"\");\r\n\r\n    const onChangeGifSelectText = (e) => {\r\n        setGifSearchText(e.target.value);\r\n    }\r\n\r\n    const addComment = (comment) => {\r\n        setCommentList([\r\n            ...commentList,\r\n            comment\r\n        ])\r\n        setCommentBoxText(\"\")\r\n        setCommentBoxGifUrl(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchGifs = () => {\r\n            const GIPHY_API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\n            let url = \"\";\r\n    \r\n            if (gifSearchText === \"\") {\r\n                url = `https://api.giphy.com/v1/gifs/trending?api_key=${GIPHY_API_KEY}&limit=25&rating=g`;\r\n            }\r\n            else {\r\n                url = `https://api.giphy.com/v1/gifs/search?api_key=${GIPHY_API_KEY}&q=${gifSearchText}&limit=25&offset=0&rating=g&lang=en`;\r\n            }\r\n    \r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(resp => {\r\n                    setGifResponse(resp);\r\n                });\r\n        }\r\n\r\n        fetchGifs();\r\n    }, [gifSearchText]);\r\n\r\n    return (\r\n        <div className=\"container-fluid\" id=\"main-container\">\r\n            <Post posted={postPosted}\r\n                setPostPosted={(b) => {setPostPosted(b)}}\r\n                postText={postText} \r\n                postGif={postGif}\r\n                setPostGif={(gifObj) => {setPostGif(gifObj)}}\r\n                setPostText={(text) => setPostText(text)}\r\n                onChangeGifSelectText={(e) => onChangeGifSelectText(e)}\r\n                gifSearchText={gifSearchText}\r\n                gifResponse={gifResponse}\r\n            />\r\n            <CommentList\r\n                commentList={commentList}\r\n            />\r\n            <CommentBox\r\n                postPosted={postPosted}\r\n                commentBoxText={commentBoxText}\r\n                setCommentBoxText={(text) => {setCommentBoxText(text)}}\r\n                addComment={(comment) => {addComment(comment)}}\r\n                commentBoxGifUrl={commentBoxGifUrl}\r\n                setCommentBoxGifUrl={(url) => {setCommentBoxGifUrl(url)}}\r\n                onChangeGifSelectText={(e) => onChangeGifSelectText(e)}\r\n                gifResponse={gifResponse}\r\n            />\r\n        </div>\r\n    );\r\n}","import { Main } from './components/MainComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}